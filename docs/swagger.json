{
  "swagger": "2.0",
  "info": {
    "version": "1.0.0",
    "title": "CinemApp",
    "description": "CinemApp API Docs",
    "contact": {
      "email": "nicolasbertillod@gmail.com"
    },
    "license": {
      "name": "Apache 2.0",
      "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
    }
  },
  "schemes": [
    "http",
    "https"
  ],
  "host": "localhost:3000",
  "basePath": "/api",
  "paths": {
    "/user": {
      "get": {
        "tags": [
          "User"
        ],
        "summary": "Get all the Users",
        "description": "Get all the Users",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Users fetched successfully",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/User"
              }
            }
          },
          "400": {
            "description": "Error in fetching Users",
            "schema": {
              "type": "object",
              "$ref": "#/definitions/CommonResponse"
            }
          }
        }
      },
      "post": {
        "tags": [
          "User"
        ],
        "summary": "Save a new User",
        "description": "Save a new User",
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "User object",
            "required": true,
            "schema": {
              "type": "object",
              "$ref": "#/definitions/User"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "User saved successfully",
            "schema": {
              "type": "object",
              "$ref": "#/definitions/CommonResponse"
            }
          },
          "400": {
            "description": "Error in saving User",
            "schema": {
              "type": "object",
              "$ref": "#/definitions/CommonResponse"
            }
          }
        }
      }
    },
    "/user/{id}": {
      "get": {
        "tags": [
          "User"
        ],
        "summary": "Get a User",
        "description": "Get a User with the id specified in parameter",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "User id that needs to be fetched",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "User fetched successfully",
            "schema": {
              "type": "object",
              "$ref": "#/definitions/User"
            }
          },
          "400": {
            "description": "Error in fetching User",
            "schema": {
              "type": "object",
              "$ref": "#/definitions/CommonResponse"
            }
          }
        }
      },
      "put": {
        "tags": [
          "User"
        ],
        "summary": "Update a User",
        "description": "Update a User",
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "User id that needs to be updated",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "User object",
            "required": true,
            "schema": {
              "type": "object",
              "$ref": "#/definitions/User"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "User updated successfully",
            "schema": {
              "type": "object",
              "$ref": "#/definitions/CommonResponse"
            }
          },
          "400": {
            "description": "Error in updating User",
            "schema": {
              "type": "object",
              "$ref": "#/definitions/CommonResponse"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "User"
        ],
        "summary": "Delete a User",
        "description": "Delete a User with the id specified in parameter",
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "User id that needs to be deleted",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "User deleted successfully",
            "schema": {
              "type": "object",
              "$ref": "#/definitions/CommonResponse"
            }
          },
          "400": {
            "description": "Error in deleting User",
            "schema": {
              "type": "object",
              "$ref": "#/definitions/CommonResponse"
            }
          }
        }
      }
    },
    "/cinema": {
      "get": {
        "tags": [
          "Cinema"
        ],
        "summary": "Get all the Cinemas",
        "description": "Get all the Cinemas",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Cinemas fetched successfully",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Cinema"
              }
            }
          },
          "400": {
            "description": "Error in fetching Cinemas",
            "schema": {
              "type": "object",
              "$ref": "#/definitions/CommonResponse"
            }
          }
        }
      },
      "post": {
        "tags": [
          "Cinema"
        ],
        "summary": "Save a new Cinema",
        "description": "Save a new Cinema",
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Cinema object",
            "required": true,
            "schema": {
              "type": "object",
              "$ref": "#/definitions/Cinema"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Cinema saved successfully",
            "schema": {
              "type": "object",
              "$ref": "#/definitions/CommonResponse"
            }
          },
          "400": {
            "description": "Error in saving Cinema",
            "schema": {
              "type": "object",
              "$ref": "#/definitions/CommonResponse"
            }
          }
        }
      }
    },
    "/cinema/{id}": {
      "get": {
        "tags": [
          "Cinema"
        ],
        "summary": "Get a Cinema",
        "description": "Get a Cinema with the id specified in parameter",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "Cinema id that needs to be fetched",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Cinema fetched successfully",
            "schema": {
              "type": "object",
              "$ref": "#/definitions/Cinema"
            }
          },
          "400": {
            "description": "Error in fetching Cinema",
            "schema": {
              "type": "object",
              "$ref": "#/definitions/CommonResponse"
            }
          }
        }
      },
      "put": {
        "tags": [
          "Cinema"
        ],
        "summary": "Update a Cinema",
        "description": "Update a Cinema",
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "Cinema id that needs to be updated",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Cinema object",
            "required": true,
            "schema": {
              "type": "object",
              "$ref": "#/definitions/Cinema"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Cinema updated successfully",
            "schema": {
              "type": "object",
              "$ref": "#/definitions/CommonResponse"
            }
          },
          "400": {
            "description": "Error in updating Cinema",
            "schema": {
              "type": "object",
              "$ref": "#/definitions/CommonResponse"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Cinema"
        ],
        "summary": "Delete a Cinema",
        "description": "Delete a Cinema with the id specified in parameter",
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "Cinema id that needs to be deleted",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Cinema deleted successfully",
            "schema": {
              "type": "object",
              "$ref": "#/definitions/CommonResponse"
            }
          },
          "400": {
            "description": "Error in deleting Cinema",
            "schema": {
              "type": "object",
              "$ref": "#/definitions/CommonResponse"
            }
          }
        }
      }
    },
    "/room": {
      "get": {
        "tags": [
          "Room"
        ],
        "summary": "Get all the Rooms",
        "description": "Get all the Rooms",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Rooms fetched successfully",
            "schema": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "cinema_id": {
                    "type": "integer"
                  },
                  "room_id": {
                    "type": "integer"
                  },
                  "name": {
                    "type": "string"
                  },
                  "rows": {
                    "type": "integer"
                  },
                  "seats": {
                    "type": "integer"
                  },
                  "enabled": {
                    "type": "boolean"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Error in fetching Rooms",
            "schema": {
              "type": "object",
              "$ref": "#/definitions/CommonResponse"
            }
          }
        }
      },
      "post": {
        "tags": [
          "Room"
        ],
        "summary": "Save a new Room",
        "description": "Save a new Room",
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Room object",
            "required": true,
            "schema": {
              "type": "object",
              "$ref": "#/paths/~1room/get/responses/200/schema/items"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Room saved successfully",
            "schema": {
              "type": "object",
              "$ref": "#/definitions/CommonResponse"
            }
          },
          "400": {
            "description": "Error in saving Room",
            "schema": {
              "type": "object",
              "$ref": "#/definitions/CommonResponse"
            }
          }
        }
      }
    },
    "/room/{room_id}": {
      "get": {
        "tags": [
          "Room"
        ],
        "summary": "Get a Room",
        "description": "Get a Room with the id specified in parameter",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "Room id that needs to be fetched",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Room fetched successfully",
            "schema": {
              "type": "object",
              "$ref": "#/paths/~1room/get/responses/200/schema/items"
            }
          },
          "400": {
            "description": "Error in fetching Room",
            "schema": {
              "type": "object",
              "$ref": "#/definitions/CommonResponse"
            }
          }
        }
      },
      "put": {
        "tags": [
          "Room"
        ],
        "summary": "Update a Room",
        "description": "Update a Room",
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "Room id that needs to be updated",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Room object",
            "required": true,
            "schema": {
              "type": "object",
              "$ref": "#/paths/~1room/get/responses/200/schema/items"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Room updated successfully",
            "schema": {
              "type": "object",
              "$ref": "#/definitions/CommonResponse"
            }
          },
          "400": {
            "description": "Error in updating Room",
            "schema": {
              "type": "object",
              "$ref": "#/definitions/CommonResponse"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Room"
        ],
        "summary": "Delete a Room",
        "description": "Delete a Room with the id specified in parameter",
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "Room id that needs to be deleted",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Room deleted successfully",
            "schema": {
              "type": "object",
              "$ref": "#/definitions/CommonResponse"
            }
          },
          "400": {
            "description": "Error in deleting Room",
            "schema": {
              "type": "object",
              "$ref": "#/definitions/CommonResponse"
            }
          }
        }
      }
    },
    "/movie": {
      "get": {
        "tags": [
          "Movie"
        ],
        "summary": "Get all the Movies",
        "description": "Get all the Movies",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Movies fetched successfully",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Movie"
              }
            }
          },
          "400": {
            "description": "Error in fetching Movies",
            "schema": {
              "type": "object",
              "$ref": "#/definitions/CommonResponse"
            }
          }
        }
      }
    },
    "/movie/{movie_id}": {
      "get": {
        "tags": [
          "Movie"
        ],
        "summary": "Get a Movie",
        "description": "Get a Movie with the id specified in parameter",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "Movie id that needs to be fetched",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Movie fetched successfully",
            "schema": {
              "type": "object",
              "$ref": "#/definitions/Movie"
            }
          },
          "400": {
            "description": "Error in fetching Movie",
            "schema": {
              "type": "object",
              "$ref": "#/definitions/CommonResponse"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "CommonResponse": {
      "type": "object",
      "properties": {
        "message": {
          "type": "string"
        }
      }
    },
    "User": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer"
        },
        "username": {
          "type": "string"
        },
        "email": {
          "type": "string",
          "format": "email"
        },
        "password": {
          "type": "string"
        },
        "company": {
          "type": "string"
        }
      },
      "required": [
        "username",
        "email"
      ]
    },
    "Cinema": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer"
        },
        "name": {
          "type": "string"
        },
        "street": {
          "type": "string"
        },
        "street_num": {
          "type": "integer"
        },
        "state": {
          "type": "string"
        },
        "country": {
          "type": "string"
        },
        "city": {
          "type": "string"
        },
        "latitude": {
          "type": "number"
        },
        "longitude": {
          "type": "number"
        },
        "price": {
          "type": "number"
        },
        "enabled": {
          "type": "boolean"
        }
      }
    },
    "Movie": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer"
        },
        "title": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "duration": {
          "type": "number"
        },
        "release_date": {
          "type": "string",
          "format": "date"
        },
        "genre": {
          "type": "string"
        },
        "director": {
          "type": "string"
        },
        "cast": {
          "type": "string"
        },
        "score": {
          "type": "integer"
        },
        "certificate": {
          "type": "string"
        }
      }
    },
    "Reservation": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer"
        },
        "user_id": {
          "type": "integer"
        },
        "movie_id": {
          "type": "integer"
        },
        "created_at": {
          "type": "string"
        },
        "updated_at": {
          "type": "string"
        },
        "active": {
          "type": "integer",
          "minimum": 0,
          "maximum": 1
        }
      }
    }
  }
}
